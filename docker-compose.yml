version: '3.9'
services:
  rabbitmq:
    image: rabbitmq:4.1-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: default
      RABBITMQ_DEFAULT_PASS: default
    volumes:
      - ./db-data/rabbitmq:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 5s
      retries: 10
      start_period: 5s
      timeout: 5s
  auth-db:
    image: postgres:17
    environment:
      POSTGRES_USER: ${AUTH_SERVICE_DB_USER}
      POSTGRES_PASSWORD: ${AUTH_SERVICE_DB_PASSWORD}
      POSTGRES_DB: ${AUTH_SERVICE_DB_NAME}
    ports:
      - "${AUTH_SERVICE_DB_PORT}:5432"
    volumes:
      - ./db-data/auth:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${AUTH_SERVICE_DB_USER} -d ${AUTH_SERVICE_DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
  auth:
    build: ./services/auth-service
    ports:
      - "${AUTH_SERVICE_EXTERNAL_PORT}:${AUTH_SERVICE_INTERNAL_PORT}"
    environment:
      DB_HOST: auth-db
      DB_PORT: 5432
      DB_NAME: ${AUTH_SERVICE_DB_NAME}
      DB_USER: ${AUTH_SERVICE_DB_USER}
      DB_PASSWORD: ${AUTH_SERVICE_DB_PASSWORD}
      ADMIN_LOGIN: "admin"
      ADMIN_PASSWORD: "admin1234"
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: default
      RABBITMQ_PASSWORD: default
      RABBITMQ_PORT: 5672
    depends_on:
      auth-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./services/auth-service/init-scripts:/app/init-scripts
  lead-db:
    image: postgres:17
    environment:
      POSTGRES_USER: ${LEAD_SERVICE_DB_USER}
      POSTGRES_PASSWORD: ${LEAD_SERVICE_DB_PASSWORD}
      POSTGRES_DB: ${LEAD_SERVICE_DB_NAME}
    ports:
      - "${LEAD_SERVICE_DB_PORT}:5432"
    volumes:
      - ./db-data/lead:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${LEAD_SERVICE_DB_USER} -d ${LEAD_SERVICE_DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
  lead:
    build: ./services/lead-service
    ports:
      - "${LEAD_SERVICE_EXTERNAL_PORT}:${LEAD_SERVICE_INTERNAL_PORT}"
    environment:
      DB_HOST: lead-db
      DB_PORT: 5432
      DB_NAME: ${LEAD_SERVICE_DB_NAME}
      DB_USER: ${LEAD_SERVICE_DB_USER}
      DB_PASSWORD: ${LEAD_SERVICE_DB_PASSWORD}
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: default
      RABBITMQ_PASSWORD: default
      RABBITMQ_PORT: 5672
    depends_on:
      lead-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./services/lead-service/init-scripts:/app/init-scripts
  users-db:
    image: postgres:17
    environment:
      POSTGRES_USER: ${USERS_SERVICE_DB_USER}
      POSTGRES_PASSWORD: ${USERS_SERVICE_DB_PASSWORD}
      POSTGRES_DB: ${USERS_SERVICE_DB_NAME}
    ports:
      - "${USERS_SERVICE_DB_PORT}:5432"
    volumes:
      - ./db-data/users:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${USERS_SERVICE_DB_USER} -d ${USERS_SERVICE_DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
  users:
    build: ./services/users-service
    ports:
      - "${USERS_SERVICE_EXTERNAL_PORT}:${USERS_SERVICE_INTERNAL_PORT}"
    environment:
      DB_HOST: users-db
      DB_PORT: 5432
      DB_NAME: ${USERS_SERVICE_DB_NAME}
      DB_USER: ${USERS_SERVICE_DB_USER}
      DB_PASSWORD: ${USERS_SERVICE_DB_PASSWORD}
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: default
      RABBITMQ_PASSWORD: default
      RABBITMQ_PORT: 5672
    depends_on:
      users-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./services/users-service/init-scripts:/app/init-scripts
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - ./db-data/redis:/var/lib/redis
    command: ["redis-server", "--appendonly", "yes"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 5
      start_period: 5s
      timeout: 5s
      disable: false
  bot:
    build: ./services/bot
    ports:
      - "${BOT_EXTERNAL_PORT}:${BOT_INTERNAL_PORT}"
    environment:
      AUTH_SERVICE_HOST: auth
      AUTH_SERVICE_PORT: ${AUTH_SERVICE_INTERNAL_PORT}
      LEAD_SERVICE_HOST: lead
      LEAD_SERVICE_PORT: ${LEAD_SERVICE_INTERNAL_PORT}
      USERS_SERVICE_HOST: users
      USERS_SERVICE_PORT: ${USERS_SERVICE_INTERNAL_PORT}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: default
      RABBITMQ_PASSWORD: default
      RABBITMQ_PORT: 5672
    depends_on:
      auth:
        condition: service_started
      lead:
        condition: service_started
      users:
        condition: service_started
      redis:
        condition: service_healthy
  notification:
    build: ./services/notification-service
    ports:
      - "${NOTIFICATION_SERVICE_EXTERNAL_PORT}:${NOTIFICATION_SERVICE_INTERNAL_PORT}"
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_USER: default
      RABBITMQ_PASSWORD: default
      RABBITMQ_PORT: 5672
    depends_on:
      rabbitmq:
        condition: service_healthy
      bot:
        condition: service_started

volumes:
  rabbitmq_data:
  auth_pg_data:
  lead_pg_data:
  users_pg_data:
  redis_data: