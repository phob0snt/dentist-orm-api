from aiogram import Router
from aiogram.filters import CommandStart, Command
from aiogram.types import Message
from aiogram.fsm.context import FSMContext

from keyboards.reply import auth_kb, menu_kb
from schemas.auth import UserData
from services.user_cache import get_user_data_cached, get_leads_cached

from .lead import show_leads, start_lead_creation
from .register import start_registration
from .login import start_login


router = Router()

@router.message(CommandStart())
async def start_handler(message: Message):
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Dentist!" \
    "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –∏–ª–∏ –≤–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —É—Å–ª—É–≥–∞–º –Ω–∞—à–µ–π —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏–∏",
    reply_markup=auth_kb)

@router.message(Command("main"))
async def show_main_page(message: Message):
    user_data: UserData = await get_user_data_cached(message.from_user.id)
    leads = await get_leads_cached(message.from_user.id)
    leads_count = len(leads) if leads else 0

    await message.answer(
        f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user_data.full_name}! \n"
        f"–í–∞—à–∏ –∑–∞–ø–∏—Å–∏: {leads_count}",
        reply_markup=menu_kb
    )

@router.message(lambda m: m.text == "üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
async def registration_button_handler(message: Message, state: FSMContext):
    await start_registration(message, state)

@router.message(lambda m: m.text == "üîê –í–æ–π—Ç–∏")
async def login_button_handler(message: Message, state: FSMContext):
    await start_login(message, state)

@router.message(lambda m: m.text == "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–∏–µ–º")
async def create_lead_button_handler(message: Message, state: FSMContext):
    await start_lead_creation(message, state)

@router.message(lambda m: m.text == "–ú–æ–∏ –∑–∞–ø–∏—Å–∏")
async def show_leads_button_handler(message: Message):
    await show_leads(message)

@router.message(lambda m: m.text == "–ù–∞ –≥–ª–∞–≤–Ω—É—é")
async def create_lead_button_handler(message: Message):
    await show_main_page(message)